'POLITICO Chart Component':
  'prefix': 'chart-comp'
  'body': """
    import { BaseChart, d3 } from '@politico/graphics-kit';

    class $1 extends BaseChart {
      defaultProps = {
        stroke: '#ccc',
        strokeWidth: '2px',
        fill: 'steelblue',
      }

      defaultData = [60, 40, 20]

      draw() {
        const data = this.data();
        const props = this.props();

        const node = this.selection().node();
        const { width, height } = node.getBoundingClientRect();
        const t = d3.transition()
          .duration(750);

        const g = this.selection()
          .appendSelect('svg') // see docs in ./utils/d3.js
          .attr('width', width)
          .attr('height', height - 35)
          .appendSelect('g')
          .attr('transform', `translate(${width / 2 - 62}, 60)`);

        const circles = g.selectAll('circle') // DATA JOIN
          .data(data, (d, i) => i);

        circles // UPDATE
          .style('fill', props.fill)
          .style('stroke', props.stroke);

        circles.enter().append('circle') // ENTER
          .style('fill', props.fill)
          .style('stroke', props.stroke)
          .style('stroke-width', props.strokeWidth)
          .attr('cy', '60')
          .attr('cx', (d, i) =>
            data.slice(0, i).reduce((a, b) => a + b, 0) + (d / 2)
          )
          .merge(circles) // ENTER + UPDATE
          .transition(t)
          .attr('cx', (d, i) =>
            data.slice(0, i).reduce((a, b) => a + b, 0) + (d / 2)
          )
          .attr('r', d => d / 2);

        circles.exit() // EXIT
          .transition(t)
          .attr('r', 0)
          .remove();

        return this;
      }
    }

    export default $1;
  """
